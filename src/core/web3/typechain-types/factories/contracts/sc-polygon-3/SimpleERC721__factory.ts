/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleERC721,
  SimpleERC721Interface,
} from "../../../contracts/sc-polygon-3/SimpleERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "mintingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURL",
        type: "string",
      },
    ],
    name: "mintNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURL",
        type: "string",
      },
    ],
    name: "mintWithPrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001deb38038062001deb83398101604081905262000034916200019d565b83836000620000448382620002a6565b506001620000538282620002a6565b505050620000706200006a6200008260201b60201c565b62000086565b600991909155600a5550620003729050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010057600080fd5b81516001600160401b03808211156200011d576200011d620000d8565b604051601f8301601f19908116603f01168101908282118183101715620001485762000148620000d8565b816040528381526020925086838588010111156200016557600080fd5b600091505b838210156200018957858201830151818301840152908201906200016a565b600093810190920192909252949350505050565b60008060008060808587031215620001b457600080fd5b84516001600160401b0380821115620001cc57600080fd5b620001da88838901620000ee565b95506020870151915080821115620001f157600080fd5b506200020087828801620000ee565b604087015160609097015195989097509350505050565b600181811c908216806200022c57607f821691505b6020821081036200024d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a157600081815260208120601f850160051c810160208610156200027c5750805b601f850160051c820191505b818110156200029d5782815560010162000288565b5050505b505050565b81516001600160401b03811115620002c257620002c2620000d8565b620002da81620002d3845462000217565b8462000253565b602080601f831160018114620003125760008415620002f95750858301515b600019600386901b1c1916600185901b1785556200029d565b600085815260208120601f198616915b82811015620003435788860151825594840194600190910190840162000322565b5085821015620003625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a6980620003826000396000f3fe6080604052600436106101095760003560e01c8063715018a611610095578063b88d4fde11610064578063b88d4fde146102c8578063c87b56dd146102e8578063e985e9c514610308578063eacabe1414610351578063f2fde38b1461037157600080fd5b8063715018a6146102605780638da5cb5b1461027557806395d89b4114610293578063a22cb465146102a857600080fd5b806323b872dd116100dc57806323b872dd146101bf57806342842e0e146101df5780635026e4ab146101ff5780636352211e1461021257806370a082311461023257600080fd5b806301ffc9a71461010e57806306fdde0314610143578063081812fc14610165578063095ea7b31461019d575b600080fd5b34801561011a57600080fd5b5061012e61012936600461142e565b610391565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b506101586103a2565b60405161013a919061149b565b34801561017157600080fd5b506101856101803660046114ae565b610434565b6040516001600160a01b03909116815260200161013a565b3480156101a957600080fd5b506101bd6101b83660046114e3565b61045b565b005b3480156101cb57600080fd5b506101bd6101da36600461150d565b610575565b3480156101eb57600080fd5b506101bd6101fa36600461150d565b6105a6565b6101bd61020d3660046115f5565b6105c1565b34801561021e57600080fd5b5061018561022d3660046114ae565b6106c4565b34801561023e57600080fd5b5061025261024d36600461162a565b610724565b60405190815260200161013a565b34801561026c57600080fd5b506101bd6107aa565b34801561028157600080fd5b506007546001600160a01b0316610185565b34801561029f57600080fd5b506101586107be565b3480156102b457600080fd5b506101bd6102c3366004611645565b6107cd565b3480156102d457600080fd5b506101bd6102e3366004611681565b6107dc565b3480156102f457600080fd5b506101586103033660046114ae565b610814565b34801561031457600080fd5b5061012e6103233660046116fd565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561035d57600080fd5b506101bd61036c366004611730565b61081f565b34801561037d57600080fd5b506101bd61038c36600461162a565b61089f565b600061039c82610918565b92915050565b6060600080546103b19061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd9061177e565b801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b5050505050905090565b600061043f82610968565b506000908152600460205260409020546001600160a01b031690565b6000610466826106c4565b9050806001600160a01b0316836001600160a01b0316036104d85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104f457506104f48133610323565b6105665760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104cf565b61057083836109c7565b505050565b61057f3382610a35565b61059b5760405162461bcd60e51b81526004016104cf906117b8565b610570838383610ab4565b610570838383604051806020016040528060008152506107dc565b6009543410156106135760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e74207061796d656e7420666f72206d696e74696e6760448201526064016104cf565b600a546008541061065c5760405162461bcd60e51b8152602060048201526013602482015272135a5b9d1a5b99c818d85c081c995858da1959606a1b60448201526064016104cf565b61066a600880546001019055565b600061067560085490565b90506106813382610c18565b61068b8183610da3565b6007546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610570573d6000803e3d6000fd5b6000818152600260205260408120546001600160a01b03168061039c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104cf565b60006001600160a01b03821661078e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104cf565b506001600160a01b031660009081526003602052604090205490565b6107b2610e36565b6107bc6000610e90565b565b6060600180546103b19061177e565b6107d8338383610ee2565b5050565b6107e63383610a35565b6108025760405162461bcd60e51b81526004016104cf906117b8565b61080e84848484610fb0565b50505050565b606061039c82610fe3565b610827610e36565b600a54600854106108705760405162461bcd60e51b8152602060048201526013602482015272135a5b9d1a5b99c818d85c081c995858da1959606a1b60448201526064016104cf565b61087e600880546001019055565b600061088960085490565b905061089583826110eb565b6105708183610da3565b6108a7610e36565b6001600160a01b03811661090c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b61091581610e90565b50565b60006001600160e01b031982166380ac58cd60e01b148061094957506001600160e01b03198216635b5e139f60e01b145b8061039c57506301ffc9a760e01b6001600160e01b031983161461039c565b6000818152600260205260409020546001600160a01b03166109155760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104cf565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109fc826106c4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a41836106c4565b9050806001600160a01b0316846001600160a01b03161480610a8857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610aac5750836001600160a01b0316610aa184610434565b6001600160a01b0316145b949350505050565b826001600160a01b0316610ac7826106c4565b6001600160a01b031614610aed5760405162461bcd60e51b81526004016104cf90611805565b6001600160a01b038216610b4f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104cf565b826001600160a01b0316610b62826106c4565b6001600160a01b031614610b885760405162461bcd60e51b81526004016104cf90611805565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610c6e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104cf565b6000818152600260205260409020546001600160a01b031615610cd35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cf565b6000818152600260205260409020546001600160a01b031615610d385760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104cf565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610e1e5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104cf565b60008281526006602052604090206105708282611898565b6007546001600160a01b031633146107bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cf565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610f435760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104cf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fbb848484610ab4565b610fc784848484611105565b61080e5760405162461bcd60e51b81526004016104cf90611958565b6060610fee82610968565b600082815260066020526040812080546110079061177e565b80601f01602080910402602001604051908101604052809291908181526020018280546110339061177e565b80156110805780601f1061105557610100808354040283529160200191611080565b820191906000526020600020905b81548152906001019060200180831161106357829003601f168201915b50505050509050600061109e60408051602081019091526000815290565b905080516000036110b0575092915050565b8151156110e25780826040516020016110ca9291906119aa565b60405160208183030381529060405292505050919050565b610aac84611206565b6107d882826040518060200160405280600081525061127a565b60006001600160a01b0384163b156111fb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111499033908990889088906004016119d9565b6020604051808303816000875af1925050508015611184575060408051601f3d908101601f1916820190925261118191810190611a16565b60015b6111e1573d8080156111b2576040519150601f19603f3d011682016040523d82523d6000602084013e6111b7565b606091505b5080516000036111d95760405162461bcd60e51b81526004016104cf90611958565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610aac565b506001949350505050565b606061121182610968565b600061122860408051602081019091526000815290565b905060008151116112485760405180602001604052806000815250611273565b80611252846112ad565b6040516020016112639291906119aa565b6040516020818303038152906040525b9392505050565b6112848383610c18565b6112916000848484611105565b6105705760405162461bcd60e51b81526004016104cf90611958565b606060006112ba83611340565b600101905060008167ffffffffffffffff8111156112da576112da611549565b6040519080825280601f01601f191660200182016040528015611304576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461130e57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061137f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106113ab576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106113c957662386f26fc10000830492506010015b6305f5e10083106113e1576305f5e100830492506008015b61271083106113f557612710830492506004015b60648310611407576064830492506002015b600a831061039c5760010192915050565b6001600160e01b03198116811461091557600080fd5b60006020828403121561144057600080fd5b813561127381611418565b60005b8381101561146657818101518382015260200161144e565b50506000910152565b6000815180845261148781602086016020860161144b565b601f01601f19169290920160200192915050565b602081526000611273602083018461146f565b6000602082840312156114c057600080fd5b5035919050565b80356001600160a01b03811681146114de57600080fd5b919050565b600080604083850312156114f657600080fd5b6114ff836114c7565b946020939093013593505050565b60008060006060848603121561152257600080fd5b61152b846114c7565b9250611539602085016114c7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561157a5761157a611549565b604051601f8501601f19908116603f011681019082821181831017156115a2576115a2611549565b816040528093508581528686860111156115bb57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126115e657600080fd5b6112738383356020850161155f565b60006020828403121561160757600080fd5b813567ffffffffffffffff81111561161e57600080fd5b610aac848285016115d5565b60006020828403121561163c57600080fd5b611273826114c7565b6000806040838503121561165857600080fd5b611661836114c7565b91506020830135801515811461167657600080fd5b809150509250929050565b6000806000806080858703121561169757600080fd5b6116a0856114c7565b93506116ae602086016114c7565b925060408501359150606085013567ffffffffffffffff8111156116d157600080fd5b8501601f810187136116e257600080fd5b6116f18782356020840161155f565b91505092959194509250565b6000806040838503121561171057600080fd5b611719836114c7565b9150611727602084016114c7565b90509250929050565b6000806040838503121561174357600080fd5b61174c836114c7565b9150602083013567ffffffffffffffff81111561176857600080fd5b611774858286016115d5565b9150509250929050565b600181811c9082168061179257607f821691505b6020821081036117b257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f82111561057057600081815260208120601f850160051c810160208610156118715750805b601f850160051c820191505b818110156118905782815560010161187d565b505050505050565b815167ffffffffffffffff8111156118b2576118b2611549565b6118c6816118c0845461177e565b8461184a565b602080601f8311600181146118fb57600084156118e35750858301515b600019600386901b1c1916600185901b178555611890565b600085815260208120601f198616915b8281101561192a5788860151825594840194600190910190840161190b565b50858210156119485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600083516119bc81846020880161144b565b8351908301906119d081836020880161144b565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a0c9083018461146f565b9695505050505050565b600060208284031215611a2857600080fd5b81516112738161141856fea264697066735822122078cf39b5ac86ac5356359e2121a934271a30396cc392325adba20c354eaf3a7964736f6c63430008110033";

type SimpleERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleERC721__factory extends ContractFactory {
  constructor(...args: SimpleERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    mintingPrice: PromiseOrValue<BigNumberish>,
    cap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleERC721> {
    return super.deploy(
      name,
      symbol,
      mintingPrice,
      cap,
      overrides || {}
    ) as Promise<SimpleERC721>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    mintingPrice: PromiseOrValue<BigNumberish>,
    cap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      mintingPrice,
      cap,
      overrides || {}
    );
  }
  override attach(address: string): SimpleERC721 {
    return super.attach(address) as SimpleERC721;
  }
  override connect(signer: Signer): SimpleERC721__factory {
    return super.connect(signer) as SimpleERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC721Interface {
    return new utils.Interface(_abi) as SimpleERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC721 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC721;
  }
}
