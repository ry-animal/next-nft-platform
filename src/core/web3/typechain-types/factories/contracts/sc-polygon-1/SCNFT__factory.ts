/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SCNFT,
  SCNFTInterface,
} from "../../../contracts/sc-polygon-1/SCNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "airdropTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDenominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "freezeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPrimaryRoyaltyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyFraction",
            type: "uint96",
          },
        ],
        internalType: "struct RoyaltyInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyBasisPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleStatus",
    outputs: [
      {
        internalType: "enum Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSecondaryRoyaltyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyFraction",
            type: "uint96",
          },
        ],
        internalType: "struct RoyaltyInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrimarySale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isTokenFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isValidToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyFraction",
            type: "uint96",
          },
        ],
        internalType: "struct RoyaltyInfo[]",
        name: "primaryRoyaltyInfo",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyFraction",
            type: "uint96",
          },
        ],
        internalType: "struct RoyaltyInfo[]",
        name: "secondaryRoyaltyInfo",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "royaltyBasisPoints",
        type: "uint256",
      },
    ],
    name: "mintNFTWithTokenIdAndRoyalities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "freezeAuth",
        type: "address",
      },
    ],
    name: "setFreezeAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "setSaleStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setTokenPrimarySale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "whitelistContractAdddress",
        type: "address",
      },
    ],
    name: "setWhitelistContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unFreezeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029913803806200299183398101604081905262000034916200019d565b8181600062000044838262000296565b50600162000053828262000296565b505050620000706200006a6200008260201b60201c565b62000086565b5050600e805460ff1916905562000362565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010057600080fd5b81516001600160401b03808211156200011d576200011d620000d8565b604051601f8301601f19908116603f01168101908282118183101715620001485762000148620000d8565b816040528381526020925086838588010111156200016557600080fd5b600091505b838210156200018957858201830151818301840152908201906200016a565b600093810190920192909252949350505050565b60008060408385031215620001b157600080fd5b82516001600160401b0380821115620001c957600080fd5b620001d786838701620000ee565b93506020850151915080821115620001ee57600080fd5b50620001fd85828601620000ee565b9150509250929050565b600181811c908216806200021c57607f821691505b6020821081036200023d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029157600081815260208120601f850160051c810160208610156200026c5750805b601f850160051c820191505b818110156200028d5782815560010162000278565b5050505b505050565b81516001600160401b03811115620002b257620002b2620000d8565b620002ca81620002c3845462000207565b8462000243565b602080601f831160018114620003025760008415620002e95750858301515b600019600386901b1c1916600185901b1785556200028d565b600085815260208120601f198616915b82811015620003335788860151825594840194600190910190840162000312565b5085821015620003525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61261f80620003726000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80637b47ec1a11610125578063a770f159116100ad578063cc888bab1161007c578063cc888bab146104a2578063dabd1fe7146104b5578063e6e64324146104de578063e985e9c5146104f1578063f2fde38b1461052d57600080fd5b8063a770f15914610456578063b6854f9614610469578063b88d4fde1461047c578063c87b56dd1461048f57600080fd5b80638da5cb5b116100f45780638da5cb5b146104045780639361b4b81461041557806395d89b4114610428578063a06c794a14610430578063a22cb4651461044357600080fd5b80637b47ec1a146103ab5780638425c286146103be578063860fc78b146103de5780638c3c4b34146103f157600080fd5b806323b872dd116101a857806357afa2b81161017757806357afa2b814610355578063604d996e146103755780636352211e1461037d57806370a0823114610390578063715018a6146103a357600080fd5b806323b872dd146103095780633fa2de131461031c57806342842e0e1461032f5780634891ad881461034257600080fd5b80630f5b0608116101ef5780630f5b06081461029e57806312f26140146102c1578063180b0d7e146102d457806318160ddd146102e457806321d2daa0146102f657600080fd5b806301ffc9a71461022157806306fdde0314610249578063081812fc1461025e578063095ea7b314610289575b600080fd5b61023461022f366004611d5d565b610540565b60405190151581526020015b60405180910390f35b610251610592565b6040516102409190611dca565b61027161026c366004611ddd565b610624565b6040516001600160a01b039091168152602001610240565b61029c610297366004611e12565b61064b565b005b6102346102ac366004611ddd565b6000908152600c602052604090205460ff1690565b61029c6102cf366004611e3c565b6106d7565b6040516127108152602001610240565b600f545b604051908152602001610240565b61029c610304366004611ddd565b610707565b61029c610317366004611e57565b6107a0565b61029c61032a366004611e57565b6107d1565b61029c61033d366004611e57565b610822565b61029c610350366004611e93565b61083d565b610368610363366004611ddd565b61086c565b6040516102409190611eb4565b6102716108fb565b61027161038b366004611ddd565b610993565b6102e861039e366004611e3c565b6109f3565b61029c610a79565b61029c6103b9366004611ddd565b610a8d565b6102e86103cc366004611ddd565b6000908152600d602052604090205490565b6102346103ec366004611ddd565b610acf565b600e5460ff166040516102409190611f2b565b6007546001600160a01b0316610271565b6102e86104233660046120fc565b610ae2565b610251610b6a565b61029c61043e3660046121a7565b610b79565b61029c6104513660046121ec565b610b8f565b61029c610464366004611e3c565b610b9a565b61029c610477366004611ddd565b610bc0565b61029c61048a366004612228565b610c45565b61025161049d366004611ddd565b610c7d565b6102346104b0366004611ddd565b610d8d565b61029c6104c3366004611ddd565b6000908152600c60205260409020805460ff19166001179055565b6103686104ec366004611ddd565b610e32565b6102346104ff3660046122a4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61029c61053b366004611e3c565b610eac565b60006001600160e01b031982166380ac58cd60e01b148061057157506001600160e01b03198216635b5e139f60e01b145b8061058c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546105a1906122d7565b80601f01602080910402602001604051908101604052809291908181526020018280546105cd906122d7565b801561061a5780601f106105ef5761010080835404028352916020019161061a565b820191906000526020600020905b8154815290600101906020018083116105fd57829003601f168201915b5050505050905090565b600061062f82610f22565b506000908152600460205260409020546001600160a01b031690565b600061065682610993565b9050806001600160a01b0316836001600160a01b0316036106c85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b6106d28383610f81565b505050565b6106df610fff565b600e80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b61071081610f22565b6008546001600160a01b031633148061073357506007546001600160a01b031633145b6107855760405162461bcd60e51b815260206004820152602f60248201526000805160206125ca83398151915260448201526e72656420746f20756e667265657a6560881b60648201526084016106bf565b6000908152600960205260409020805460ff19169055565b50565b6107aa3382611059565b6107c65760405162461bcd60e51b81526004016106bf90612311565b6106d28383836110d7565b6107d9610fff565b6000818152600960205260409020805460ff191690556107fa8383836107a0565b61080381611172565b6106d2816000908152600c60205260409020805460ff19166001179055565b6106d283838360405180602001604052806000815250610c45565b610845610fff565b600e805482919060ff1916600183600481111561086457610864611f15565b021790555050565b6060600b6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108f057600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b0316818301528252600190920191016108a1565b505050509050919050565b600061090f6008546001600160a01b031690565b6001600160a01b0316336001600160a01b0316148061093857506007546001600160a01b031633145b61097e5760405162461bcd60e51b815260206004820152602360248201526000805160206125ca8339815191526044820152621c995960ea1b60648201526084016106bf565b50600e5461010090046001600160a01b031690565b6000818152600260205260408120546001600160a01b03168061058c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106bf565b60006001600160a01b038216610a5d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106bf565b506001600160a01b031660009081526003602052604090205490565b610a81610fff565b610a8b600061118d565b565b610a95610fff565b610a9e81610f22565b610aa7816111df565b6000818152600960205260409020805460ff19169055610ac68161121f565b61079d81611272565b6000610ada82610f22565b506001919050565b6000610aec610fff565b610af68786611293565b610b0085876112ad565b610b0985611172565b610b138585611340565b610b1d858461140a565b6000858152600d60205260408120839055600f805460018101825591527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80201859055509295945050505050565b6060600180546105a1906122d7565b610b81610fff565b610b8b81836112ad565b5050565b610b8b3383836114d4565b610ba2610fff565b600880546001600160a01b0319166001600160a01b03831617905550565b610bc981610f22565b6008546001600160a01b0316331480610bec57506007546001600160a01b031633145b610c3c5760405162461bcd60e51b815260206004820152602d60248201526000805160206125ca83398151915260448201526c72656420746f20667265657a6560981b60648201526084016106bf565b61079d81611172565b610c4f3383611059565b610c6b5760405162461bcd60e51b81526004016106bf90612311565b610c77848484846115a2565b50505050565b6060610c8882610f22565b60008281526006602052604081208054610ca1906122d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ccd906122d7565b8015610d1a5780601f10610cef57610100808354040283529160200191610d1a565b820191906000526020600020905b815481529060010190602001808311610cfd57829003601f168201915b505050505090506000610d3860408051602081019091526000815290565b90508051600003610d4a575092915050565b815115610d7c578082604051602001610d6492919061235e565b60405160208183030381529060405292505050919050565b610d85846115d5565b949350505050565b6000610d9882610f22565b6008546001600160a01b0316331480610dbb57506007546001600160a01b031633145b610e1b5760405162461bcd60e51b815260206004820152603960248201526000805160206125ca83398151915260448201527f72656420746f207669657720667265657a65207374617475730000000000000060648201526084016106bf565b60008281526009602052604090205460ff1661058c565b6000818152600a602090815260408083208054825181850281018501909352808352606094929391929091840182156108f057600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b0316818301528252600190920191016108a1565b610eb4610fff565b6001600160a01b038116610f195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106bf565b61079d8161118d565b6000818152600260205260409020546001600160a01b031661079d5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106bf565b6008546001600160a01b0316331480610fa457506007546001600160a01b031633145b610ff55760405162461bcd60e51b815260206004820152602e60248201526000805160206125ca83398151915260448201526d72656420746f20617070726f766560901b60648201526084016106bf565b610b8b8282611649565b6007546001600160a01b03163314610a8b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106bf565b60008061106583610993565b9050806001600160a01b0316846001600160a01b031614806110ac57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d855750836001600160a01b03166110c584610624565b6001600160a01b031614949350505050565b60008181526009602052604090205460ff16156111675760405162461bcd60e51b815260206004820152604260248201527f53434e46543a204e46542066726f7a656e20746f2077616c6c65742e2043616e60448201527f206f6e6c79206265207472616461626c65206f6e20736e6f7763726173682e636064820152616f6d60f01b608482015260a4016106bf565b6106d28383836116b7565b6000908152600960205260409020805460ff19166001179055565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111e88161181b565b60008181526006602052604090208054611201906122d7565b15905061079d57600081815260066020526040812061079d91611cda565b6000818152600d60209081526040808320839055600b909152812061124391611d14565b6000818152600a6020526040812061125a91611d14565b6000908152600c60205260409020805460ff19169055565b600f81815481106112855761128561238d565b600091825260208220015550565b610b8b8282604051806020016040528060008152506118b0565b6000828152600260205260409020546001600160a01b03166113285760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016106bf565b60008281526006602052604090206106d282826123f1565b60005b81518110156106d257600a6000848152602001908152602001600020604051806040016040528084848151811061137c5761137c61238d565b6020026020010151600001516001600160a01b031681526020018484815181106113a8576113a861238d565b6020908102919091018101518101516001600160601b03908116909252835460018101855560009485529381902083519390910151909116600160a01b026001600160a01b039092169190911791015580611402816124b1565b915050611343565b60005b81518110156106d257600b600084815260200190815260200160002060405180604001604052808484815181106114465761144661238d565b6020026020010151600001516001600160a01b031681526020018484815181106114725761147261238d565b6020908102919091018101518101516001600160601b03908116909252835460018101855560009485529381902083519390910151909116600160a01b026001600160a01b0390921691909117910155806114cc816124b1565b91505061140d565b816001600160a01b0316836001600160a01b0316036115355760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106bf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6115ad8484846110d7565b6115b9848484846118e3565b610c775760405162461bcd60e51b81526004016106bf906124d8565b60606115e082610f22565b60006115f760408051602081019091526000815290565b905060008151116116175760405180602001604052806000815250611642565b80611621846119e4565b60405160200161163292919061235e565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061167e82610993565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b826001600160a01b03166116ca82610993565b6001600160a01b0316146116f05760405162461bcd60e51b81526004016106bf9061252a565b6001600160a01b0382166117525760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106bf565b826001600160a01b031661176582610993565b6001600160a01b03161461178b5760405162461bcd60e51b81526004016106bf9061252a565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061182682610993565b905061183182610993565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6118ba8383611a77565b6118c760008484846118e3565b6106d25760405162461bcd60e51b81526004016106bf906124d8565b60006001600160a01b0384163b156119d957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061192790339089908890889060040161256f565b6020604051808303816000875af1925050508015611962575060408051601f3d908101601f1916820190925261195f918101906125ac565b60015b6119bf573d808015611990576040519150601f19603f3d011682016040523d82523d6000602084013e611995565b606091505b5080516000036119b75760405162461bcd60e51b81526004016106bf906124d8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d85565b506001949350505050565b606060006119f183611c02565b600101905060008167ffffffffffffffff811115611a1157611a11611f53565b6040519080825280601f01601f191660200182016040528015611a3b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611a4557509392505050565b6001600160a01b038216611acd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106bf565b6000818152600260205260409020546001600160a01b031615611b325760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106bf565b6000818152600260205260409020546001600160a01b031615611b975760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106bf565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611c415772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611c6d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611c8b57662386f26fc10000830492506010015b6305f5e1008310611ca3576305f5e100830492506008015b6127108310611cb757612710830492506004015b60648310611cc9576064830492506002015b600a831061058c5760010192915050565b508054611ce6906122d7565b6000825580601f10611cf6575050565b601f01602090049060005260206000209081019061079d9190611d2e565b508054600082559060005260206000209081019061079d91905b5b80821115611d435760008155600101611d2f565b5090565b6001600160e01b03198116811461079d57600080fd5b600060208284031215611d6f57600080fd5b813561164281611d47565b60005b83811015611d95578181015183820152602001611d7d565b50506000910152565b60008151808452611db6816020860160208601611d7a565b601f01601f19169290920160200192915050565b6020815260006116426020830184611d9e565b600060208284031215611def57600080fd5b5035919050565b80356001600160a01b0381168114611e0d57600080fd5b919050565b60008060408385031215611e2557600080fd5b611e2e83611df6565b946020939093013593505050565b600060208284031215611e4e57600080fd5b61164282611df6565b600080600060608486031215611e6c57600080fd5b611e7584611df6565b9250611e8360208501611df6565b9150604084013590509250925092565b600060208284031215611ea557600080fd5b81356005811061164257600080fd5b602080825282518282018190526000919060409081850190868401855b82811015611f0857815180516001600160a01b031685528601516001600160601b0316868501529284019290850190600101611ed1565b5091979650505050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160058310611f4d57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611f8c57611f8c611f53565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611fbb57611fbb611f53565b604052919050565b600067ffffffffffffffff831115611fdd57611fdd611f53565b611ff0601f8401601f1916602001611f92565b905082815283838301111561200457600080fd5b828260208301376000602084830101529392505050565b600082601f83011261202c57600080fd5b61164283833560208501611fc3565b600082601f83011261204c57600080fd5b8135602067ffffffffffffffff82111561206857612068611f53565b612076818360051b01611f92565b82815260069290921b8401810191818101908684111561209557600080fd5b8286015b848110156120f157604081890312156120b25760008081fd5b6120ba611f69565b6120c382611df6565b8152848201356001600160601b03811681146120df5760008081fd5b81860152835291830191604001612099565b509695505050505050565b60008060008060008060c0878903121561211557600080fd5b61211e87611df6565b9550602087013567ffffffffffffffff8082111561213b57600080fd5b6121478a838b0161201b565b965060408901359550606089013591508082111561216457600080fd5b6121708a838b0161203b565b9450608089013591508082111561218657600080fd5b5061219389828a0161203b565b92505060a087013590509295509295509295565b600080604083850312156121ba57600080fd5b823567ffffffffffffffff8111156121d157600080fd5b6121dd8582860161201b565b95602094909401359450505050565b600080604083850312156121ff57600080fd5b61220883611df6565b91506020830135801515811461221d57600080fd5b809150509250929050565b6000806000806080858703121561223e57600080fd5b61224785611df6565b935061225560208601611df6565b925060408501359150606085013567ffffffffffffffff81111561227857600080fd5b8501601f8101871361228957600080fd5b61229887823560208401611fc3565b91505092959194509250565b600080604083850312156122b757600080fd5b6122c083611df6565b91506122ce60208401611df6565b90509250929050565b600181811c908216806122eb57607f821691505b60208210810361230b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351612370818460208801611d7a565b835190830190612384818360208801611d7a565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b601f8211156106d257600081815260208120601f850160051c810160208610156123ca5750805b601f850160051c820191505b818110156123e9578281556001016123d6565b505050505050565b815167ffffffffffffffff81111561240b5761240b611f53565b61241f8161241984546122d7565b846123a3565b602080601f831160018114612454576000841561243c5750858301515b600019600386901b1c1916600185901b1785556123e9565b600085815260208120601f198616915b8281101561248357888601518255948401946001909101908401612464565b50858210156124a15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016124d157634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906125a290830184611d9e565b9695505050505050565b6000602082840312156125be57600080fd5b815161164281611d4756fe53434e46543a20536e6f77637261736820617574686f72697479207265717569a2646970667358221220574158f9e2e097b3f848509cd0db756992c15d9b5a8398964a4187870a47a05564736f6c63430008110033";

type SCNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SCNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SCNFT__factory extends ContractFactory {
  constructor(...args: SCNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SCNFT> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<SCNFT>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): SCNFT {
    return super.attach(address) as SCNFT;
  }
  override connect(signer: Signer): SCNFT__factory {
    return super.connect(signer) as SCNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SCNFTInterface {
    return new utils.Interface(_abi) as SCNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SCNFT {
    return new Contract(address, _abi, signerOrProvider) as SCNFT;
  }
}
