/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SCTrading,
  SCTradingInterface,
} from "../../../contracts/sc-polygon-1/SCTrading";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "marketFeeAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "marketFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
    ],
    name: "claimBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scnftContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "executeNFTTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scnftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getNFTListed",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct SCTrading.ListedNFT",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scnftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isNFTListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scnftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listPrice",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scnftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unlistNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scnftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listPrice",
        type: "uint256",
      },
    ],
    name: "updateListedNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketFeeAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "marketFee",
        type: "uint256",
      },
    ],
    name: "updateMarketFeeAndAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002458380380620024588339810160408190526200003491620000b8565b6200003f3362000068565b600355600280546001600160a01b0319166001600160a01b0392909216919091179055620000f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060408385031215620000cc57600080fd5b82516001600160a01b0381168114620000e457600080fd5b6020939093015192949293505050565b61235480620001046000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b14610168578063ad05f1b414610190578063b633e4cd146101b0578063e1b1afd0146101d0578063f2fde38b146101e3578063fab25bb21461020357600080fd5b806337820532146100a15780633f7964ea146100f15780637088922c14610113578063715018a6146101335780637fc27efd14610148575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004611e9e565b610233565b6040805182516001600160a01b031681526020808401519082015291810151908201526060015b60405180910390f35b3480156100fd57600080fd5b5061011161010c366004611e9e565b6102e9565b005b34801561011f57600080fd5b5061011161012e366004611eca565b610317565b34801561013f57600080fd5b5061011161051f565b34801561015457600080fd5b50610111610163366004611e9e565b610533565b34801561017457600080fd5b506000546040516001600160a01b0390911681526020016100e8565b34801561019c57600080fd5b506101116101ab366004611eca565b610695565b3480156101bc57600080fd5b506101116101cb366004611eff565b610c81565b6101116101de366004611f23565b610d3b565b3480156101ef57600080fd5b506101116101fe366004611eff565b6112fe565b34801561020f57600080fd5b5061022361021e366004611e9e565b611377565b60405190151581526020016100e8565b610260604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b600061026b846113ed565b61027484611426565b604051602001610285929190611f94565b60405160208183030381529060405290506001816040516102a69190611fb1565b90815260408051918290036020908101832060608401835280546001600160a01b0316845260018101549184019190915260020154908201529150505b92915050565b6102f161143e565b600280546001600160a01b0319166001600160a01b039390931692909217909155600355565b6040516331a9108f60e11b8152600481018390526000906001600160a01b03851690636352211e90602401602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190611fbd565b9050336001600160a01b038216148061041757506001600160a01b03841663e985e9c582336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190611fda565b61043c5760405162461bcd60e51b815260040161043390611ffc565b60405180910390fd5b60006104488585610233565b80519091506001600160a01b03166104725760405162461bcd60e51b815260040161043390612063565b600061047d866113ed565b61048686611426565b604051602001610497929190611f94565b60408051601f198184030181526060830182526001600160a01b03891683526020830188905282820187905290519092506001906104d6908490611fb1565b9081526040805160209281900383019020835181546001600160a01b0319166001600160a01b039091161781559183015160018301559190910151600290910155505050505050565b61052761143e565b6105316000611498565b565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e90602401602060405180830381865afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f9190611fbd565b9050336001600160a01b038216148061063357506001600160a01b03831663e985e9c582336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190611fda565b61064f5760405162461bcd60e51b815260040161043390611ffc565b600061065b8484610233565b80519091506001600160a01b03166106855760405162461bcd60e51b815260040161043390612063565b61068f84846114e8565b50505050565b60405163860fc78b60e01b8152600481018390526001600160a01b0384169063860fc78b90602401602060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe9190611fda565b61074a5760405162461bcd60e51b815260206004820152601f60248201527f534354726164696e673a20546f6b656e20646f6573206e6f74206578697374006044820152606401610433565b6040516331a9108f60e11b8152600481018390526000906001600160a01b03851690636352211e90602401602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190611fbd565b9050336001600160a01b038216148061084a57506001600160a01b03841663e985e9c582336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a9190611fda565b6108665760405162461bcd60e51b815260040161043390611ffc565b6000846001600160a01b0316638c3c4b346040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca91906120a5565b6040516301eb60c160e31b8152600481018690529091506000906001600160a01b03871690630f5b060890602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190611fda565b9050600482600481111561094f5761094f6120c6565b0361099c5760405162461bcd60e51b815260206004820152601d60248201527f534354726164696e673a20436f6c6c656374696f6e206f6e20686f6c640000006044820152606401610433565b8080156109ba575060038260048111156109b8576109b86120c6565b145b806109c3575080155b610a355760405162461bcd60e51b815260206004820152603b60248201527f534354726164696e673a20436f6c6c656374696f6e207365636f6e646172792060448201527f73616c65206e6f7420656e61626c6564206f72206f6e20686f6c6400000000006064820152608401610433565b60405163095ea7b360e01b8152306004820152602481018690526001600160a01b0387169063095ea7b390604401600060405180830381600087803b158015610a7d57600080fd5b505af1158015610a91573d6000803e3d6000fd5b505060405163020604bf60e21b8152600481018890523092506001600160a01b038916915063081812fc90602401602060405180830381865afa158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190611fbd565b6001600160a01b031614610b7c5760405162461bcd60e51b815260206004820152603c60248201527f534354726164696e673a20546f6b656e206e6f7420617070726f76656420666f60448201527f7220736e6f7763726173682074726164696e6720636f6e7472616374000000006064820152608401610433565b610b868686611377565b15610bd35760405162461bcd60e51b815260206004820152601e60248201527f534354726164696e673a204e465420616c7265616479206c69737465642e00006044820152606401610433565b6000610bde876113ed565b610be787611426565b604051602001610bf8929190611f94565b60408051601f198184030181526060830182526001600160a01b038a168352602083018990528282018890529051909250600190610c37908490611fb1565b9081526040805160209281900383019020835181546001600160a01b0319166001600160a01b03909116178155918301516001830155919091015160029091015550505050505050565b610c8961143e565b6000816001600160a01b03164760405160006040518083038185875af1925050503d8060008114610cd6576040519150601f19603f3d011682016040523d82523d6000602084013e610cdb565b606091505b5050905080610d375760405162461bcd60e51b815260206004820152602260248201527f534354726164696e673a205472616e736665722062616c616e6365206661696c604482015261195960f21b6064820152608401610433565b5050565b6000836001600160a01b0316638c3c4b346040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f91906120a5565b90506000816004811115610db557610db56120c6565b03610e115760405162461bcd60e51b815260206004820152602660248201527f534354726164696e673a20436f6c6c656374696f6e206973206e6f742079657460448201526520726561647960d01b6064820152608401610433565b6004816004811115610e2557610e256120c6565b03610e725760405162461bcd60e51b815260206004820152601d60248201527f534354726164696e673a20436f6c6c656374696f6e206f6e20686f6c640000006044820152606401610433565b6000846001600160a01b031663604d996e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190611fbd565b90506001600160a01b03811615610fa55760405163592ef49160e01b81526001600160a01b038681166004830152858116602483015282169063592ef49190604401602060405180830381865afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f599190611fda565b610fa55760405162461bcd60e51b815260206004820152601960248201527f534354726164696e673a2055736572206e6f74204b59436564000000000000006044820152606401610433565b6001826004811115610fb957610fb96120c6565b0361109f576001600160a01b0381161561109f5760405163592ef49160e01b81526001600160a01b038681166004830152858116602483015282169063592ef49190604401602060405180830381865afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611fda565b61109f5760405162461bcd60e51b815260206004820152602b60248201527f534354726164696e673a2055736572206e6f742077686974656c69737465642060448201526a666f722070726573616c6560a81b6064820152608401610433565b60006110ab8685610233565b80519091506001600160a01b03166110d55760405162461bcd60e51b815260040161043390612063565b8060400151341461114e5760405162461bcd60e51b815260206004820152603d60248201527f534354726164696e673a204578616374206c6973746564207072696365206e6560448201527f65647320746f206265207472616e73666572656420696e2076616c75650000006064820152608401610433565b61115d8685836040015161155f565b60405163010e96d560e51b8152600481018590526001600160a01b038716906321d2daa090602401600060405180830381600087803b15801561119f57600080fd5b505af11580156111b3573d6000803e3d6000fd5b50506040516331a9108f60e11b815260048101879052600092506001600160a01b0389169150636352211e90602401602060405180830381865afa1580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112239190611fbd565b6040516323b872dd60e01b81526001600160a01b038083166004830152888116602483015260448201889052919250908816906323b872dd90606401600060405180830381600087803b15801561127957600080fd5b505af115801561128d573d6000803e3d6000fd5b5050604051635b42a7cb60e11b8152600481018890526001600160a01b038a16925063b6854f969150602401600060405180830381600087803b1580156112d357600080fd5b505af11580156112e7573d6000803e3d6000fd5b505050506112f587866114e8565b50505050505050565b61130661143e565b6001600160a01b03811661136b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610433565b61137481611498565b50565b600080611383846113ed565b61138c84611426565b60405160200161139d929190611f94565b604051602081830303815290604052905060006001600160a01b03166001826040516113c99190611fb1565b908152604051908190036020019020546001600160a01b0316141591505092915050565b604051606082811b6bffffffffffffffffffffffff19166020830152906102e3906034015b604051602081830303815290604052611c70565b60606102e38260405160200161141291815260200190565b6000546001600160a01b031633146105315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610433565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006114f3836113ed565b6114fc83611426565b60405160200161150d929190611f94565b604051602081830303815290604052905060018160405161152e9190611fb1565b90815260405190819003602001902080546001600160a01b0319168155600060018201819055600290910155505050565b6040516301eb60c160e31b8152600481018390526000906001600160a01b03851690630f5b060890602401602060405180830381865afa1580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cb9190611fda565b90506000846001600160a01b031663180b0d7e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561160d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163191906120f8565b6001600160601b0316905060008215611a6c57604051630af5f45760e31b8152600481018690526000906001600160a01b038816906357afa2b890602401600060405180830381865afa15801561168c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116b49190810190612183565b604051634212e14360e11b8152600481018890529091506000906001600160a01b03891690638425c28690602401602060405180830381865afa1580156116ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117239190612261565b90506000846117328389612290565b61173c91906122a7565b905060005b835181101561186557600084828151811061175e5761175e6122c9565b6020026020010151600001519050806001600160a01b0316878487858151811061178a5761178a6122c9565b6020026020010151602001516001600160601b03166117a99190612290565b6117b391906122a7565b604051600081818185875af1925050503d80600081146117ef576040519150601f19603f3d011682016040523d82523d6000602084013e6117f4565b606091505b505080965050856118525760405162461bcd60e51b815260206004820152602260248201527f534354726164696e673a205472616e7366657220726f79616c7479206661696c604482015261195960f21b6064820152608401610433565b508061185d816122df565b915050611741565b50600085600354896118779190612290565b61188191906122a7565b6002546040519192506001600160a01b0316908290600081818185875af1925050503d80600081146118cf576040519150601f19603f3d011682016040523d82523d6000602084013e6118d4565b606091505b505080955050846119355760405162461bcd60e51b815260206004820152602560248201527f534354726164696e673a205472616e73666572206d61726b6574206665652066604482015264185a5b195960da1b6064820152608401610433565b6040516331a9108f60e11b8152600481018a90526000906001600160a01b038c1690636352211e90602401602060405180830381865afa15801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a19190611fbd565b90506001600160a01b038116826119b8858c6122f8565b6119c291906122f8565b604051600081818185875af1925050503d80600081146119fe576040519150601f19603f3d011682016040523d82523d6000602084013e611a03565b606091505b50508096505085611a625760405162461bcd60e51b815260206004820152602360248201527f534354726164696e673a205472616e7366657220746f206f776e6572206661696044820152621b195960ea1b6064820152608401610433565b5050505050611c68565b6040516339b990c960e21b8152600481018690526000906001600160a01b0388169063e6e6432490602401600060405180830381865afa158015611ab4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611adc9190810190612183565b905060005b8151811015611c0b576000828281518110611afe57611afe6122c9565b6020026020010151600001519050806001600160a01b03168588858581518110611b2a57611b2a6122c9565b6020026020010151602001516001600160601b0316611b499190612290565b611b5391906122a7565b604051600081818185875af1925050503d8060008114611b8f576040519150601f19603f3d011682016040523d82523d6000602084013e611b94565b606091505b50508094505083611bf85760405162461bcd60e51b815260206004820152602860248201527f534354726164696e673a205472616e73666572207072696d6172792073686172604482015267194819985a5b195960c21b6064820152608401610433565b5080611c03816122df565b915050611ae1565b5060405163dabd1fe760e01b8152600481018790526001600160a01b0388169063dabd1fe790602401600060405180830381600087803b158015611c4e57600080fd5b505af1158015611c62573d6000803e3d6000fd5b50505050505b505050505050565b60408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b6020820152815160609190600090611cab906002612290565b611cb690600261230b565b67ffffffffffffffff811115611cce57611cce612113565b6040519080825280601f01601f191660200182016040528015611cf8576020820181803683370190505b509050600360fc1b81600081518110611d1357611d136122c9565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d4257611d426122c9565b60200101906001600160f81b031916908160001a90535060005b8451811015611e8157826004868381518110611d7a57611d7a6122c9565b016020015182516001600160f81b031990911690911c60f81c908110611da257611da26122c9565b01602001516001600160f81b03191682611dbd836002612290565b611dc890600261230b565b81518110611dd857611dd86122c9565b60200101906001600160f81b031916908160001a90535082858281518110611e0257611e026122c9565b602091010151815160f89190911c600f16908110611e2257611e226122c9565b01602001516001600160f81b03191682611e3d836002612290565b611e4890600361230b565b81518110611e5857611e586122c9565b60200101906001600160f81b031916908160001a90535080611e79816122df565b915050611d5c565b509392505050565b6001600160a01b038116811461137457600080fd5b60008060408385031215611eb157600080fd5b8235611ebc81611e89565b946020939093013593505050565b600080600060608486031215611edf57600080fd5b8335611eea81611e89565b95602085013595506040909401359392505050565b600060208284031215611f1157600080fd5b8135611f1c81611e89565b9392505050565b600080600060608486031215611f3857600080fd5b8335611f4381611e89565b92506020840135611f5381611e89565b929592945050506040919091013590565b6000815160005b81811015611f855760208185018101518683015201611f6b565b50600093019283525090919050565b6000611fa9611fa38386611f64565b84611f64565b949350505050565b6000611f1c8284611f64565b600060208284031215611fcf57600080fd5b8151611f1c81611e89565b600060208284031215611fec57600080fd5b81518015158114611f1c57600080fd5b60208082526041908201527f534354726164696e673a204c697374204e46542063616c6c6572206973206e6f60408201527f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6060820152601b60fa1b608082015260a00190565b60208082526022908201527f534354726164696e673a204e4654206e6f74206c697374656420666f722073616040820152616c6560f01b606082015260800190565b6000602082840312156120b757600080fd5b815160058110611f1c57600080fd5b634e487b7160e01b600052602160045260246000fd5b80516001600160601b03811681146120f357600080fd5b919050565b60006020828403121561210a57600080fd5b611f1c826120dc565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561214c5761214c612113565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561217b5761217b612113565b604052919050565b6000602080838503121561219657600080fd5b825167ffffffffffffffff808211156121ae57600080fd5b818501915085601f8301126121c257600080fd5b8151818111156121d4576121d4612113565b6121e2848260051b01612152565b818152848101925060069190911b83018401908782111561220257600080fd5b928401925b8184101561225657604084890312156122205760008081fd5b612228612129565b845161223381611e89565b81526122408587016120dc565b8187015283526040939093019291840191612207565b979650505050505050565b60006020828403121561227357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102e3576102e361227a565b6000826122c457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016122f1576122f161227a565b5060010190565b818103818111156102e3576102e361227a565b808201808211156102e3576102e361227a56fea2646970667358221220f2c3c0f81daee3e68a2efb5148e8bb0b3e3700bfaa0619de92c379b65f00b62a64736f6c63430008110033";

type SCTradingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SCTradingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SCTrading__factory extends ContractFactory {
  constructor(...args: SCTradingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    marketFeeAccount: PromiseOrValue<string>,
    marketFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SCTrading> {
    return super.deploy(
      marketFeeAccount,
      marketFee,
      overrides || {}
    ) as Promise<SCTrading>;
  }
  override getDeployTransaction(
    marketFeeAccount: PromiseOrValue<string>,
    marketFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      marketFeeAccount,
      marketFee,
      overrides || {}
    );
  }
  override attach(address: string): SCTrading {
    return super.attach(address) as SCTrading;
  }
  override connect(signer: Signer): SCTrading__factory {
    return super.connect(signer) as SCTrading__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SCTradingInterface {
    return new utils.Interface(_abi) as SCTradingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SCTrading {
    return new Contract(address, _abi, signerOrProvider) as SCTrading;
  }
}
