import { type NextPage } from "next";
import Head from "next/head";
import { Footer } from "./footer";
import { StaticBackground } from "./BackgroundStatic";
import Header from "./header";

interface Props {
  utilities?: any;
  colorScheme?: any;
  children?: React.ReactNode | React.ReactNode[];
  noise?: number;
  hideFooter?: boolean;
  dark?: boolean;
}

export const Scaffold = (props: Props) => {
  if (props.hideFooter) {
    return (
      <div className="absolute inset-0 overflow-hidden">
        <Head>
          <title>Snowcrash</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className=" h-full w-full">
          <StaticBackground
            amount={props.noise ? props.noise : 0.05}
            className="h-full w-full "
            dark={props.dark}
          >
            {props.children}
          </StaticBackground>
        </main>
      </div>
    );
  }
  return (
    <div className="overflow-hidden">
      <Head>
        <title>Snowcrash</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col justify-between">
        <StaticBackground
          amount={props.noise ? props.noise : 0.5}
          className="bg-[#373737]"
          dark={false}
        >
          <div className="relative flex h-screen min-h-screen w-screen flex-row overflow-hidden text-white">
            <div className="absolute top-0 bottom-0  flex w-screen flex-1 flex-col overflow-hidden">
              <div className="scrollbar-hide flex min-h-screen flex-col overflow-y-auto overflow-x-clip">
                {props.children}
                {!props.hideFooter && <Footer />}
              </div>
            </div>
            <div className="absolute top-0 z-20 w-screen">
              <Header dark={props.dark} />
            </div>
          </div>
        </StaticBackground>
      </main>
    </div>
  );
};
